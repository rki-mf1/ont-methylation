manifest {
    mainScript = 'main.nf'
    nextflowVersion = '>=22.01.0'
}

// default parameters
params {
    max_cores = Runtime.runtime.availableProcessors()
    cores = Runtime.runtime.availableProcessors().intdiv(4)
    memory = '4 GB'
    help = false
    profile = false

    //input
    fasta = ''
    bam = ''
    list = false

    // params
    filter_threshold_modkit = 0.75
    
    //output
    outdir = "results"
    percent_cutoff_modification_table = 0.5

    // location for storing singularity images
    singularityCacheDir = 'singularity'
}

profiles {
    ////////////////////////////////////////////////////
    // executors

    local {
        executor {
            name = "local"
            cpus = params.max_cores
            memory = params.memory
        }
        includeConfig 'configs/local.config'
    }

    slurm {
        executor {
            name = "slurm"
            queueSize = 100
            // exitReadTimeout = "360 sec"
            // submitRateLimit = '1 / 2 s'
            // pollInterval = '30 sec'
        }
        process.cache = "lenient"
        includeConfig 'configs/nodes.config'
    }

    slurm_priority {
        process {
            clusterOptions = '--partition=priority'
        }
    }

    ////////////////////////////////////////////////////
    // engines 

    docker {
        docker { 
            enabled = true
        }
        includeConfig 'configs/container.config'
    }

    singularity {
        singularity { 
                enabled = true
                autoMounts = true
                cacheDir = params.singularityCacheDir
                envWhitelist = "HTTPS_PROXY,HTTP_PROXY,http_proxy,https_proxy,FTP_PROXY,ftp_proxy"
        }
        includeConfig 'configs/container.config'
    }    

    ////////////////////////////////////////////////////
    // pre-configured profile combinations
    // local execution with docker
    standard {
        executor {
            name = "local"
            cpus = params.max_cores
            memory = params.memory
        }
        docker { 
            enabled = true
        }
        includeConfig 'configs/local.config'
        includeConfig 'configs/container.config' 
    }
}





